# udevadm
# Autogenerated from man page /usr/share/man/man8/udevadm.8
complete -c udevadm -l debug -d 'Print debug messages to standard error'
complete -c udevadm -l version -d 'Print version number'
complete -c udevadm -s h -l help -d 'Print help text'
complete -c udevadm -s q -l query -d 'Query the database for the specified type of device data'
complete -c udevadm -s p -l path -d 'The /sys path of the device to query, e. g.  [/sys]/class/block/sda'
complete -c udevadm -s n -l name -d 'The name of the device node or a symlink to query, e. g.  [/dev]/sda'
complete -c udevadm -s r -l root -d 'Print absolute paths in name or symlink query'
complete -c udevadm -s a -l attribute-walk -d 'Print all sysfs properties of the specified device that can be used in udev r…'
complete -c udevadm -s x -l export -d 'Print output as key/value pairs.  Values are enclosed in single quotes'
complete -c udevadm -s P -l export-prefix -d 'Add a prefix to the key name of exported values'
complete -c udevadm -s d -l device-id-of-file -d 'Print major/minor numbers of the underlying device, where the file lives on'
complete -c udevadm -s e -l export-db -d 'Export the content of the udev database'
complete -c udevadm -s c -l cleanup-db -d 'Cleanup the udev database'
complete -c udevadm -s v -l verbose -d 'Print the list of devices which will be triggered'
complete -c udevadm -l dry-run -d 'Do not actually trigger the event'
complete -c udevadm -s t -l type -d 'Trigger a specific type of devices.  Valid types are: devices, subsystems'
complete -c udevadm -l action -d 'Type of event to be triggered.  The default value is change'
complete -c udevadm -s s -l subsystem-match -d 'Trigger events for devices which belong to a matching subsystem'
complete -c udevadm -s S -l subsystem-nomatch -d 'Do not trigger events for devices which belong to a matching subsystem'
complete -c udevadm -l attr-match -d 'Trigger events for devices with a matching sysfs attribute'
complete -c udevadm -s A -l attr-nomatch -d 'Do not trigger events for devices with a matching sysfs attribute'
complete -c udevadm -l property-match -d 'Trigger events for devices with a matching property value'
complete -c udevadm -s g -l tag-match -d 'Trigger events for devices with a matching tag'
complete -c udevadm -s y -l sysname-match -d 'Trigger events for devices with a matching sys device path'
complete -c udevadm -l name-match -d 'Trigger events for devices with a matching device path'
complete -c udevadm -s b -l parent-match -d 'Trigger events for all children of a given device'
complete -c udevadm -l timeout -d 'Maximum number of seconds to wait for the event queue to become empty'
complete -c udevadm -s E -l exit-if-exists -d 'Stop waiting if file exists'
complete -c udevadm -l exit -d 'Signal and wait for udevd to exit'
complete -c udevadm -s l -l log-priority -d 'Set the internal log level of udevd'
complete -c udevadm -l stop-exec-queue -d 'Signal udevd to stop executing new events.  Incoming events will be queued'
complete -c udevadm -l start-exec-queue -d 'Signal udevd to enable the execution of events'
complete -c udevadm -s R -l reload -d 'Signal udevd to reload the rules files and other databases like the kernel mo…'
complete -c udevadm -l property -d 'Set a global property for all events'
complete -c udevadm -s m -l children-max -d 'Set the maximum number of events, udevd will handle at the same time'
complete -c udevadm -s k -l kernel -d 'Print the kernel uevents'
complete -c udevadm -s u -l udev -d 'Print the udev event after the rule processing'
complete -c udevadm -l update -d 'Compile the hardware database information located in /etc/udev/hwdb'
complete -c udevadm -l usr -d 'Put the compiled database into /usr/lib/udev/hwdb. bin instead'
complete -c udevadm -l test -d 'Query the database with a modalias string, and print the retrieved properties'
complete -c udevadm -s o -l output -d 'Specify the exact location where to write the compiled database'
complete -c udevadm -s N -l resolve-names -d 'Specify when udevadm should resolve names of users and groups'

